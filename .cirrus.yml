env:
  # see https://github.com/SonarSource/re-terraform-aws-vault/blob/master/orders/bubble-cfamily.yaml
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  DOCKER_USERNAME: VAULT[development/kv/data/docker/sonardockerrw data.username]
  DOCKER_PASSWORD: VAULT[development/kv/data/docker/sonardockerrw data.access_token_rwd]

  # Mend scan global configuration  
  WS_PRODUCTNAME: SonarSource/sonar-scanner-cli-docker
  MEND_API_KEY: VAULT[development/kv/data/mend data.apikey]
  WS_WSS_URL: https://saas-eu.whitesourcesoftware.com/agent

  # Staging image configuration
  STAGING_IMAGE_NAME: sonarsource/sonarqube
  CURRENT_TAG: scanner-5.0.1

vm_instance_template: &VM_TEMPLATE
  experimental: true # see https://github.com/cirruslabs/cirrus-ci-docs/issues/1051
  image: docker-builder-v*
  type: t2.small
  region: eu-central-1
  subnet_id: ${CIRRUS_AWS_SUBNET}
  disk: 10
  cpu: 4
  memory: 16G

build_task:
  ec2_instance:
    <<: *VM_TEMPLATE
  login_script:
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  build_script:
    - echo "Build and push the ${STAGING_IMAGE_NAME}:${CURRENT_TAG} image"
    - docker build --tag "${STAGING_IMAGE_NAME}:${CURRENT_TAG}" --push .

private_scan_task:
  ec2_instance:
    <<: *VM_TEMPLATE
  login_script:
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  setup_script:
    - apt-get remove -y unattended-upgrades
    - apt-get update && apt-get install -y --no-install-recommends openjdk-17-jre
    - curl -sSL https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar -o wss-unified-agent.jar
    - echo "docker.includes=${CURRENT_TAG}" >> .cirrus/wss-unified-agent.config
  scan_script:
    - echo "Scan the ${STAGING_IMAGE_NAME}:${CURRENT_TAG} image"
    - docker pull "${STAGING_IMAGE_NAME}:${CURRENT_TAG}"
    - java -jar wss-unified-agent.jar -c .cirrus/wss-unified-agent.config -apiKey $MEND_API_KEY -product ${WS_PRODUCTNAME} -project ${STAGING_IMAGE_NAME}:${CURRENT_TAG} -wss.url ${WS_WSS_URL} -docker.scanImages true
depends_on: build

public_scan_task: 
  only_if: $CIRRUS_CRON == 'nightly-mend-scan'
  env:
    PUBLIC_IMAGE_NAME: sonarsource/sonar-scanner-cli
    TAG: latest
  ec2_instance:
    <<: *VM_TEMPLATE
  setup_script:
    - apt-get remove -y unattended-upgrades
    - apt-get update && apt-get install -y --no-install-recommends openjdk-17-jre
    - curl -sSL https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar -o wss-unified-agent.jar
    - echo "docker.includes=${TAG}" >> .cirrus/wss-unified-agent.config
  scan_script:
    - echo "Scan the ${PUBLIC_IMAGE_NAME}:${TAG} image"
    - docker pull "${PUBLIC_IMAGE_NAME}:${TAG}"
    - java -jar wss-unified-agent.jar -c .cirrus/wss-unified-agent.config -apiKey $MEND_API_KEY -product ${WS_PRODUCTNAME} -project ${PUBLIC_IMAGE_NAME}:${TAG} -wss.url ${WS_WSS_URL} -docker.scanImages true

test_docker_builder:
  login_script:
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  test_script:
    - apt-get update && apt-get install -qy bats
    - echo "Checking out the sonar-scanning-examples repository"
    - git clone https://github.com/SonarSource/sonar-scanning-examples.git target_repository
    - echo "Test the ${STAGING_IMAGE_NAME}:${CURRENT_TAG} image"
    - TEST_IMAGE="${STAGING_IMAGE_NAME}:${CURRENT_TAG}" bats --tap test
  depends_on: build

sonar_scan_task:
  eks_container:
    region: eu-central-1
    cluster_name: ${CIRRUS_CLUSTER_NAME}
    namespace: default
    image: sonarsource/sonar-scanner-cli:latest
    cpu: 4
    memory: 4G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
  script:
    - source .cirrus/scan.sh
  depends_on: build
