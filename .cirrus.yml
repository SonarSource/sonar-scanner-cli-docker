env:
  # see https://github.com/SonarSource/re-terraform-aws-vault/blob/master/orders/bubble-cfamily.yaml
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  ARTIFACTORY_DEPLOY_USERNAME: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-docker-release username]
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-docker-release access_token]

  # Staging image configuration
  DOCKER_REPOX_BUILDS_REGISTRY: repox-sonarsource-docker-builds.jfrog.io
  DOCKER_IMAGE: "sonarsource/sonar-scanner-cli"
  STAGING_IMAGE_TAG: "${DOCKER_REPOX_BUILDS_REGISTRY}/${DOCKER_IMAGE}:${CI_BUILD_NUMBER}"

ec2_instance_template: &EC2_TEMPLATE
  experimental: true # see https://github.com/cirruslabs/cirrus-ci-docs/issues/1051
  image: docker-builder-v*
  type: t2.xlarge
  region: eu-central-1

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_CRON == "" && $CIRRUS_USER_COLLABORATOR == 'true' && $CIRRUS_TAG == "" && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BUILD_SOURCE == 'api' )

build_task:
  <<: *ONLY_SONARSOURCE_QA
  ec2_instance:
    <<: *EC2_TEMPLATE
  login_script:
    - docker login "${DOCKER_REPOX_BUILDS_REGISTRY}" -u "${ARTIFACTORY_DEPLOY_USERNAME}" --password-stdin <<<"${ARTIFACTORY_DEPLOY_PASSWORD}"
  build_script:
    - echo "Build and push the ${STAGING_IMAGE_TAG} image"
    - docker build --tag "${STAGING_IMAGE_TAG}" --push .

test_task:
  <<: *ONLY_SONARSOURCE_QA
  ec2_instance:
    <<: *EC2_TEMPLATE
  submodules_script:
    - git submodule init
    - git submodule update
  login_script:
    - docker login "${DOCKER_REPOX_BUILDS_REGISTRY}" -u "${ARTIFACTORY_DEPLOY_USERNAME}" --password-stdin <<<"${ARTIFACTORY_DEPLOY_PASSWORD}"
  test_script:
    - apt-get update && apt-get install -qy curl jq
    - echo "Checking out the sonar-scanning-examples repository"
    - git clone https://github.com/SonarSource/sonar-scanning-examples.git target_repository
    - echo "Test the ${STAGING_IMAGE_TAG} image"
    - TEST_IMAGE="${STAGING_IMAGE_TAG}" ./test/bats/bin/bats --tap test
  depends_on: build

sonar_scan_task:
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    region: eu-central-1
    cluster_name: ${CIRRUS_CLUSTER_NAME}
    namespace: default
    image: sonarsource/sonar-scanner-cli:latest
    cpu: 4
    memory: 4G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
  script:
    - source .cirrus/scan.sh
  depends_on: build
