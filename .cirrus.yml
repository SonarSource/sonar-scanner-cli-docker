env:
  CIRRUS_VAULT_URL: https://vault.sonar.build:8200
  CIRRUS_VAULT_AUTH_PATH: jwt-cirrusci
  CIRRUS_VAULT_ROLE: cirrusci-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}

  DOCKER_USERNAME: VAULT[development/kv/data/docker/sonardockerrw data.username]
  DOCKER_PASSWORD: VAULT[development/kv/data/docker/sonardockerrw data.access_token_rwd]

  WS_PRODUCTNAME: SonarSource/sonar-scanner-cli
  STAGING_IMAGE_NAME: sonarsource/sonarqube


vm_instance_template: &VM_TEMPLATE
  experimental: true # see https://github.com/cirruslabs/cirrus-ci-docs/issues/1051
  image: docker-builder-v*
  type: t2.small
  region: eu-central-1
  subnet_id: ${CIRRUS_AWS_SUBNET}
  disk: 10
  cpu: 4
  memory: 16G


multi_arch_staging_build_task: 
  env:
    matrix:
      - version: 4/
        tag: sonar-scanner-cli
        SONAR_SCANNER_VERSION: 4.8.0.2856
  ec2_instance:
    <<: *VM_TEMPLATE
  login_script:
    - docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
  setup_script:
    - docker run -t --rm --privileged tonistiigi/binfmt --install all
    - docker buildx create --name multibuilder
    - docker buildx use multibuilder
    - docker buildx inspect --bootstrap
  build_script:
    - echo "Build the ${STAGING_IMAGE_NAME}:${tag} image supporting two architectures, linux/amd64 and linux/arm64"
    - docker buildx build --platform linux/amd64,linux/arm64 --build-arg SONAR_SCANNER_VERSION=${SONAR_SCANNER_VERSION} --tag "${STAGING_IMAGE_NAME}:${tag}-${SONAR_SCANNER_VERSION}" --push ${version}
