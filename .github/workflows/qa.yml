name: QA

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        version: [4]
        include:
          - version: 4
            tag: 4
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - id: secrets
        uses: SonarSource/vault-action-wrapper@2.4.3-1
        with:
          secrets: |
            development/kv/data/sign key | gpg_key;
            development/kv/data/sign passphrase | gpg_passphrase;
      - uses: actions/checkout@v2
      - uses: thebritican/fetch-latest-release@v2.0.0
        id: latest_release
      - uses: actions/checkout@v2
        with:
          repository: SonarSource/sonar-scanning-examples
          path: target_repository
      - name: Build image
        run: |
          docker build "${{ matrix.version }}" \
            --pull \
            --tag "sonar-scanner-cli:${{ matrix.tag }}" \
            --build-arg SONAR_SCANNER_VERSION=${{ steps.latest_release.outputs.tag_name }}
      - name: Test image
        run: ./run-tests.sh "sonar-scanner-cli:${{ matrix.tag }}"
      - name: Run Trivy vulnerability scanner
        id: triviy-run
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: sonar-scanner-cli:${{ matrix.tag }}
          exit-code: 1
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Generate CycloneDX SBOM
        uses: SonarSource/gh-action_sbom@v1
        with:
          image: "sonar-scanner-cli:${{ matrix.tag }}"
          filename: "sonar-scanner-cli-${{ matrix.tag }}-bom.json"
          upload-artifact: true
          upload-release-assets: false
        env:
          GPG_PRIVATE_KEY_PASSPHRASE: ${{ fromJSON(steps.secrets.outputs.vault).gpg_passphrase }}
          GPG_PRIVATE_KEY_BASE64: ${{ fromJSON(steps.secrets.outputs.vault).gpg_key }}
